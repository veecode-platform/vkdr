name: GraalVM Native Image builds
on:
  push:
    branches:
      - main
    # Sequence of patterns matched against refs/tags
    #tags:
    #  - 'v*' # Push events to matching v*, i.e. v1.0, v20.15.10
jobs:
  build:
    name: VKDR on ${{ matrix.os }}
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        include:
          - os: ubuntu-latest
            os-name: linux
            arch: amd64
          #- os: ubuntu-latest
          #  os-name: linux
          #  arch: arm64
          # macos-12 = osx intel
          - os: macos-12
            os-name: osx
            arch: amd64
          # macos-14 = osx arm (M1+)
          - os: macos-14
            os-name: osx
            arch: arm64
    steps:
      - uses: actions/checkout@v4

      - uses: graalvm/setup-graalvm@v1
        with:
          java-version: '21'
          distribution: 'graalvm'
          github-token: ${{ secrets.GITHUB_TOKEN }}
          native-image-job-reports: 'true'

      - name: Build native binary and run VKDR CLI
        run: |
          ./mvnw -Pnative native:compile
          mv ./target/vkdr ./target/vkdr-${{ matrix.os-name }}-${{ matrix.arch }}
      
      - name: Upload binary
        uses: actions/upload-artifact@v3
        with:
          name: vkdr-${{ matrix.os-name }}-${{ matrix.arch }}
          path: ./target/vkdr-${{ matrix.os-name }}-${{ matrix.arch }}

  release:
    name: VKDR Release
    needs: build
    runs-on: ubuntu-latest
    steps:
      #- name: Checkout code
      #  uses: actions/checkout@v2
#      - name: Create Release
#        id: create_release
#        uses: actions/create-release@v1
#        env:
#          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }} # This token is provided by Actions, you do not need to create your own token
#        with:
#          tag_name: ${{ github.ref }}
#          release_name: Release ${{ github.ref }}
#          body: |
#            This is a new release
#            - we are still working on release notes
#          draft: true
#          prerelease: false
      - name: Download all artifacts
        uses: actions/download-artifact@v3
      - name: Release version and assets
        uses: softprops/action-gh-release@v2
        with:
          files: "$GITHUB_WORKSPACE/vkdr-*"
#      - name: Upload Release Asset
#        run: |
#          ls -l "$GITHUB_WORKSPACE/*"
#          for file in "$GITHUB_WORKSPACE/*"; do
#            if [ -f "$file" ]; then
#              echo "Uploading $file"
#              curl -X POST \
#                   -H "Authorization: token ${{ secrets.GITHUB_TOKEN }}" \
#                   -H "Content-Type: application/octet-stream" \
#                   --data-binary @$file \
#                   "https://uploads.github.com/repos/${{ github.repository }}/releases/${{ steps.create_release.outputs.id }}/assets?name=$(basename $file)"
#            fi
#          done
